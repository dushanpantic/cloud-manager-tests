name: E2E Tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment where to run tests
        required: true
        type: environment
        default: dev

jobs:
  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      shoots: ${{ steps.shoots.outputs.shoots }}
    steps:
      - uses: actions/checkout@v4
      - name: Find Shoots
        id: shoots
        run: |
          SHOOTS=`jq -c ".skrs.${{ inputs.environment }} | keys_unsorted " ./assets/config.json`
          echo "shoots=$SHOOTS"
          echo "shoots=$SHOOTS" >> "$GITHUB_OUTPUT"

  run-tests:
    runs-on: ubuntu-latest
    needs: define-matrix
    strategy:
      matrix:
        shoot: ${{ fromJSON(needs.define-matrix.outputs.shoots) }}
    environment: ${{ inputs.environment }}
    steps:
      - name: Print shoot
        run: echo ${{ matrix.shoot }}
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Build
        run: |
          go mod tidy
          go mod download
          go build -o bin/kfr cmd/main.go
      - name: Download kubectl
        run: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - name: Build token
        env:
          IAS_URL: ${{ vars.IAS_URL }}
          IAS_USERNAME: ${{ secrets.IAS_USERNAME }}
          IAS_PASSWORD: ${{ secrets.IAS_PASSWORD }}
          IAS_CLIENT_ID: ${{ secrets.IAS_CLIENT_ID }}
          IAS_CLIENT_SECRET: ${{ secrets.IAS_CLIENT_SECRET }}
        run: |
          curl -X POST "$IAS_URL/oauth2/token" \
            -H 'Content-Type: application/x-www-form-urlencoded' \
            -d 'grant_type=password' \
            -d "username=$IAS_USERNAME" \
            -d "password=$IAS_PASSWORD" \
            -d "client_id=$IAS_CLIENT_ID" \
            -d "client_secret=$IAS_CLIENT_SECRET" \
            -d 'scope=groups, email' > token.json
      - name: Build kubeconfig
        env:
          IAS_USERNAME: ${{ secrets.IAS_USERNAME }}
          IAS_PASSWORD: ${{ secrets.IAS_PASSWORD }}
          BTP_URL: ${{ vars.BTP_URL }}
          BTP_SUBDOMAIN: ${{ vars.BTP_SUBDOMAIN }}
          BTP_IDP: ${{ vars.BTP_IDP }}
          SKRS: ${{ vars.SKRS }}
        run: |
          URL=$(jq -r '.skrs.${{ inputs.environment }}.${{ matrix.shoot }}.url' ./assets/config.json)
          CA=$(jq -r '.skrs.${{ inputs.environment }}.${{ matrix.shoot }}.ca' ./assets/config.json)
          TOKEN=$(jq -r '.id_token' ./token.json)
          KC=$(jq ".users[0].user.token = \"$TOKEN\" | .clusters[0].cluster.server = \"$URL\" | .clusters[0].cluster.\"certificate-authority-data\" = \"$CA\"" ./assets/kubeconfig.json)
          kubectl config view --minify --raw  --kubeconfig <(echo $KC) > kubeconfig.yaml
